@model IEnumerable<WebApplication4.Dto.StudentEnrollSubjectDto>

@using WebApplication4.Logic

@using WebApplication4.Dto

@{
    int count=0;

    Dictionary<long, long> keyValuePairs = new Dictionary<long, long>();

    StudentEnrollSubjectsLogic studentEnrollSubjectsLogic = new StudentEnrollSubjectsLogic();


    List<StudentEnrollSubjectDto> listOfSubjectsAssignStudent = new List<StudentEnrollSubjectDto>();
}


<h1 style="text-align:right" class="page-title">عرض جميع - <span style="text-align:right" class="fw-semi-bold">الطلاب</span></h1>






<section class="widget">
    <header>

        <div class="widget-controls">
            <a data-widgster="expand" title="Expand" href="#"><i class="glyphicon glyphicon-chevron-up"></i></a>
            <a data-widgster="collapse" title="Collapse" href="#"><i class="glyphicon glyphicon-chevron-down"></i></a>
            <a data-widgster="close" title="Close" href="#"><i class="glyphicon glyphicon-remove"></i></a>
        </div>
    </header>
    <div class="widget-body" style="direction:rtl">

        <div class="mt">
            <table id="datatable-table" class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th style="text-align:right">اسم الطالب </th>


                        <th style="text-align:right" class="no-sort"> المادة 1 </th>
                        <th style="text-align:right" class="no-sort"> المادة 2 </th>
                        <th style="text-align:right" class="no-sort"> المادة 3 </th>
                        <th style="text-align:right" class="no-sort"> المادة 4 </th>
                        <th style="text-align:right" class="no-sort"> المادة 5 </th>
                        <th style="text-align:right" class="no-sort"> المادة 6 </th>



                    </tr>
                </thead>
                <tbody>





                    @foreach (var item in Model)
                    {

                        listOfSubjectsAssignStudent = null;

                        if (!keyValuePairs.ContainsKey(item.StudentSeatingNumber))
                        { keyValuePairs.Add(item.StudentSeatingNumber, 1); }


                        else
                        {
                            keyValuePairs[item.StudentSeatingNumber]++;
                        }





                        count = 0;

                        SubjectLogic subjectLogic = new SubjectLogic();
                        StudentLogic studentlogic = new StudentLogic();


                        if (keyValuePairs[item.StudentSeatingNumber] == 1)
                        {
                            studentEnrollSubjectsLogic = new StudentEnrollSubjectsLogic();

                            listOfSubjectsAssignStudent = (from x in Model
                                                           where x.StudentSeatingNumber == item.StudentSeatingNumber
                                                           select x
                                                            ).ToList();

                        }





                    <tr>

                        @if (keyValuePairs[item.StudentSeatingNumber] == 1)
                        {

                            <td><span class="fw-semi-bold">@studentlogic.GetById(@item.StudentSeatingNumber).Name</span></td>

                        }





                        @if (listOfSubjectsAssignStudent != null)
                        {
                            foreach (var sut in listOfSubjectsAssignStudent)
                            {

                                <td class="hidden-sm-down">

                                    <br>

                                    <span class="fw-semi-bold">@subjectLogic.GetById(@sut.subjectcode).SubjectName</span>

                                </td>

                            }
                        }









                    </tr>



                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

